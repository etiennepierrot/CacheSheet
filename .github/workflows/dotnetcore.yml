name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Decrypt large secret
      run: ./decrypt_secret.sh
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        PASSPHRASE: ${{ secrets.PASSPHRASE }}
    - name: display github context
      run: echo "$GITHUB_CONTEXT"
    - name: cp $HOME/secrets/cachesheet-accountservice.json ./test/CacheSheet.Tests.Interop/cachesheet-accountservice.json
      run: cp $HOME/secrets/cachesheet-accountservice.json $HOME/work/CacheSheet/CacheSheet/test/CacheSheet.Tests.Interop/
    - name: run docker
      run: docker-compose run test
    
  pack:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Determine version
      run: echo "::set-env name=VERSION::$(git describe --tags --dirty)"
      shell: bash
    - name: Version
      run: echo $VERSION
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      
    - name: Rebuild
      run: dotnet build src/CacheSheet/CacheSheet.csproj --configuration Release
    - name: Package
      run: dotnet pack --output ./artifacts --configuration Release -p:Version=$VERSION
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ./artifacts

  publish:
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Setup .NET Core 3.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages
      run: dotnet nuget push ./artifacts/**.nupkg --source nuget.org --api-key ${{secrets.NUGET_KEY}} --skip-duplicate